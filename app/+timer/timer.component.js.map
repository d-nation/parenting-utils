{"version":3,"file":"timer.component.js","sourceRoot":"","sources":["timer.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAKlD,8BAA6B,iBAAiB,CAAC,CAAA;AAS/C;IAYE,wBAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;IAAG,CAAC;IAE3C,iCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAEtC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,CAAC;YAC5C,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC;YAChD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACzE,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACpC,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,uCAAc,GAAd,UAAe,IAAI;QACjB,EAAE,CAAC,CAAC,IAAI,GAAC,EAAE,CAAC,CAAC,CAAC;YACZ,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC;IACnB,CAAC;IA1CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;;sBAAA;IAuCF,qBAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,sBAAc,iBAsC1B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgClass } from '@angular/common';\nimport { MD_CARD_DIRECTIVES } from '@angular2-material/card/card';\nimport { Observable } from 'rxjs/Rx';\n\nimport { TimerService } from './timer.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-timer',\n  templateUrl: 'timer.component.html',\n  styleUrls: ['timer.component.css'],\n  providers: [TimerService]\n})\nexport class TimerComponent implements OnInit {\n  public currentTime: Date;\n  public timerTime: Date;\n  public hoursRemaining: number;\n  public minutesRemaining: string;\n\n  public sleepState: boolean;\n  public warningState: boolean;\n  public alarmState: boolean;\n\n  private timerAmount: Number;\n\n  constructor(private timer: TimerService) {}\n\n  ngOnInit() {\n    this.currentTime = new Date();\n    this.timer.init(1, 5);\n    this.timerTime = this.timer.timerTime;\n\n    let onTimerTick = this.timer.timer.subscribe(x => {\n      this.hoursRemaining = this.timer.hoursRemaining;\n      this.minutesRemaining = this.prefixWithZero(this.timer.minutesRemaining);\n      this.sleepState = this.timer.normal;\n      this.warningState = this.timer.warning;\n      this.alarmState = this.timer.alarm;\n    });\n   \n  }\n\n  prefixWithZero(time) {\n    if (time<10) {\n      time = '0' + time;\n    }\n\n    return '' + time;\n  }\n\n\n}\n"]}